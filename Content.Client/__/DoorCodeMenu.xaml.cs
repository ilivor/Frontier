using System;
using Content.Shared.DoorCode;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Localization;

namespace Content.Client.DoorCode
{
    [GenerateTypedNameReferences]
public sealed partial class DoorCodeMenu : DefaultWindow
{
    public event Action<int>? OnKeypadButtonPressed;
    public event Action? OnClearButtonPressed;
    public event Action? OnEnterButtonPressed;

    public DoorCodeMenu()
    {
        RobustXamlLoader.Load(this);
        FillKeypadGrid();
    }

    private void FillKeypadGrid() 
    {
        // Тот же код с цифровой клавиатурой 0-9 + C + E
        for (var i = 1; i <= 9; i++) AddKeypadButton(i);
        
        var clearBtn = new Button() { Text = "C" };
        clearBtn.OnPressed += _ => OnClearButtonPressed?.Invoke();
        KeypadGrid.AddChild(clearBtn);
        
        AddKeypadButton(0);
        
        var enterBtn = new Button() { Text = "E" };
        enterBtn.OnPressed += _ => OnEnterButtonPressed?.Invoke();
        KeypadGrid.AddChild(enterBtn);
    }

    public void UpdateState(DoorCodeUiState state)
    {
        string statusMsg;
        
        switch (state.Status)
        {
            case DoorCodeStatus.AwaitingCode:
                statusMsg = Loc.GetString("door-code-enter-code");
                break;
            case DoorCodeStatus.CodeCorrect:
                statusMsg = Loc.GetString("door-code-correct");
                break;
            case DoorCodeStatus.CodeIncorrect:
                statusMsg = Loc.GetString("door-code-incorrect");
                break;
            default:
                statusMsg = Loc.GetString("door-code-error");
                break;
        }
        
        StatusLabel.Text = statusMsg;
        CodeDisplay.Text = VisualizeCode(state.EnteredCode.Length, state.CodeLength);
    }
}